{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","formValid","hasErrors","handleChange","event","target","name","value","setState","prevState","clearState","handleSubmit","preventDefault","validateForm","props","onMovie","validateField","isValid","hasError","regex","RegExp","test","this","onSubmit","type","placeholder","onChange","required","classNames","error","onBlur","disabled","React","Component","App","moviesFromServer","addMovie","newMovie","console","log","ReactDOM","render","document","getElementById"],"mappings":"+iFAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,uBCSfC,EAAb,4MACEC,MAAe,CACbd,MAAO,GACPE,OAAQ,GACRC,QAAS,GACTS,OAAQ,GACRX,YAAa,GACbc,WAAW,EACXC,UAAW,CACTd,QAAQ,EACRC,SAAS,IAVf,EAcEc,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,kBAEXH,EAAsBC,QAnB7B,EAuBEG,WAAa,WACX,EAAKF,SAAS,CACZtB,MAAO,GACPE,OAAQ,GACRC,QAAS,GACTS,OAAQ,GACRX,YAAa,MA7BnB,EAiCEwB,aAAe,SAACP,GACdA,EAAMQ,iBAEF,EAAKC,iBACP,EAAKC,MAAMC,QAAQ,EAAKf,OACxB,EAAKU,eAtCX,EA0CEM,cAAgB,SAACZ,GACf,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEVU,GAAU,EACRC,EAAW,EAAKlB,MAAME,UACtBiB,EAAQ,IAAIC,OAAO,sKAezB,MAba,WAATd,GAA8B,YAATA,IACvBW,EAAUE,EAAME,KAAKd,GACrBW,EAASZ,IAASW,GAGpB,EAAKT,UAAS,SAACR,GAAD,mBAAC,eACVA,GADS,IAEZE,UAAU,2BACLF,EAAME,WADF,kBAENI,GAAQW,SAINA,GA9DX,EAiEEJ,aAAe,WACb,MAKI,EAAKb,MAJPd,EADF,EACEA,MACAY,EAFF,EAEEA,OACAX,EAHF,EAGEA,YACAe,EAJF,EAIEA,UAGF,SAAKhB,GAAUY,GAAWX,MAID,IAArBe,EAAUd,SACa,IAAtBc,EAAUb,UA9EnB,4CAqFE,WACE,MAOIiC,KAAKtB,MANPd,EADF,EACEA,MACAE,EAFF,EAEEA,OACAC,EAHF,EAGEA,QACAS,EAJF,EAIEA,OACAX,EALF,EAKEA,YACAe,EANF,EAMEA,UAGF,OACE,uBACEZ,UAAU,gBACViC,SAAUD,KAAKX,aAFjB,UAIE,qBAAKrB,UAAU,QAAf,SACE,uBACEkC,KAAK,OACLC,YAAY,gBACZnB,KAAK,QACLC,MAAOrB,EACPwC,SAAUJ,KAAKnB,aACfwB,UAAQ,MAIZ,sBAAKrC,UAAWsC,IAAW,QAAS,CAAEC,MAAO3B,EAAUd,SAAvD,UACE,uBACEoC,KAAK,OACLC,YAAY,qBACZnB,KAAK,SACLC,MAAOnB,EACPsC,SAAUJ,KAAKnB,aACf2B,OAAQR,KAAKN,cACbW,UAAQ,IAETzB,EAAUd,QACT,qBAAKE,UAAU,8BAAf,gDAMJ,sBAAKA,UAAWsC,IAAW,QAAS,CAAEC,MAAO3B,EAAUb,UAAvD,UACE,uBACEmC,KAAK,OACLC,YAAY,oBACZnB,KAAK,UACLC,MAAOlB,EACPqC,SAAUJ,KAAKnB,aACf2B,OAAQR,KAAKN,cACbW,UAAQ,IAETzB,EAAUb,SACT,qBAAKC,UAAU,8BAAf,+CAMJ,qBAAKA,UAAU,QAAf,SACE,uBACEkC,KAAK,OACLC,YAAY,mBACZnB,KAAK,SACLC,MAAOT,EACP4B,SAAUJ,KAAKnB,aACfwB,UAAQ,MAIZ,qBAAKrC,UAAU,QAAf,SACE,0BACEmC,YAAY,sBACZnB,KAAK,cACLC,MAAOpB,EACPuC,SAAUJ,KAAKnB,iBAInB,wBACEb,UAAWsC,IAAW,yBAA0B,CAAEG,UAAWT,KAAKT,iBAClEW,KAAK,SAFP,wBArKR,GAA8BQ,IAAMC,W,QCXvBC,EAAb,4MACElC,MAAe,CACbL,OAAQwC,GAFZ,EAKEC,SAAW,SAACvC,GACV,EAAKW,UAAS,SAAAR,GACZ,IAAMqC,EAAW,CACfnD,MAAOW,EAAMX,MACbE,OAAQS,EAAMT,OACdC,QAASQ,EAAMR,QACfS,OAAQD,EAAMC,OACdX,YAAaU,EAAMV,aAGrB,MAAO,CACLQ,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoB0C,QAK9BC,QAAQC,IAAI1C,IArBhB,4CAwBE,WACE,IAAQF,EAAW2B,KAAKtB,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUyB,QAASO,KAAKc,oBAjClC,GAAyBJ,IAAMC,WCN/BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d09e90b6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  onMovie: (movie: Movie) => void;\n};\ntype HasError = {\n  imgUrl: boolean,\n  imdbUrl: boolean,\n};\n\ntype State = {\n  title: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  description: string,\n  formValid: false,\n  hasErrors: HasError,\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    description: '',\n    formValid: false,\n    hasErrors: {\n      imgUrl: false,\n      imdbUrl: false,\n    },\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name as keyof State]: value,\n    }));\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      description: '',\n    });\n  };\n\n  handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.validateForm()) {\n      this.props.onMovie(this.state);\n      this.clearState();\n    }\n  };\n\n  validateField = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    let isValid = true;\n    const hasError = this.state.hasErrors;\n    const regex = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      isValid = regex.test(value);\n      hasError[name] = !isValid;\n    }\n\n    this.setState((state) => ({\n      ...state,\n      hasErrors: {\n        ...state.hasErrors,\n        [name]: !isValid,\n      },\n    }));\n\n    return isValid;\n  };\n\n  validateForm = () => {\n    const {\n      title,\n      imdbId,\n      description,\n      hasErrors,\n    } = this.state;\n\n    if (!title || !imdbId || !description) {\n      return false;\n    }\n\n    if (hasErrors.imgUrl === true\n      || hasErrors.imdbUrl === true) {\n      return false;\n    }\n\n    return true;\n  };\n\n  render() {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      description,\n      hasErrors,\n    } = this.state;\n\n    return (\n      <form\n        className=\"ui fluid form\"\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            placeholder=\"Enten a title\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div className={classNames('field', { error: hasErrors.imgUrl })}>\n          <input\n            type=\"text\"\n            placeholder=\"Enten an image url\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.validateField}\n            required\n          />\n          {hasErrors.imgUrl && (\n            <div className=\"ui pointing red basic label\">\n              Please enter valid an image url\n            </div>\n          )}\n        </div>\n\n        <div className={classNames('field', { error: hasErrors.imdbUrl })}>\n          <input\n            type=\"text\"\n            placeholder=\"Enten an IMDb url\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.validateField}\n            required\n          />\n          {hasErrors.imdbUrl && (\n            <div className=\"ui pointing red basic label\">\n              Please enter valid an IMDb url\n            </div>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            placeholder=\"Enten an IMDb Id\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n\n        <div className=\"field\">\n          <textarea\n            placeholder=\"Enten a description\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <button\n          className={classNames('ui fluid yellow button', { disabled: !this.validateForm() })}\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => {\n      const newMovie = {\n        title: movie.title,\n        imgUrl: movie.imgUrl,\n        imdbUrl: movie.imdbUrl,\n        imdbId: movie.imdbId,\n        description: movie.description,\n      };\n\n      return {\n        movies: [...state.movies, newMovie],\n      };\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(movie);\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}